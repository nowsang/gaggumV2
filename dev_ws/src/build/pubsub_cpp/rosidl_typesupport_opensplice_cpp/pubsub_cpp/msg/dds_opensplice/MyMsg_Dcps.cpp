//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: MyMsg_Dcps.cpp
//  Source: pubsub_cpp\msg\MyMsg_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************

#include "MyMsg_Dcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < pubsub_cpp::msg::dds_::MyMsg_, struct MyMsg_Seq_uniq_>;
#endif

const char * pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_local_id = "IDL:pubsub_cpp/msg/dds_/MyMsg_TypeSupportInterface:1.0";

pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_duplicate (pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_local_id))
   {
      result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr result;
   result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_TypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * pubsub_cpp::msg::dds_::MyMsg_DataWriter::_local_id = "IDL:pubsub_cpp/msg/dds_/MyMsg_DataWriter:1.0";

pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr pubsub_cpp::msg::dds_::MyMsg_DataWriter::_duplicate (pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean pubsub_cpp::msg::dds_::MyMsg_DataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, pubsub_cpp::msg::dds_::MyMsg_DataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr pubsub_cpp::msg::dds_::MyMsg_DataWriter::_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr result = NULL;
   if (p && p->_is_a (pubsub_cpp::msg::dds_::MyMsg_DataWriter::_local_id))
   {
      result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr pubsub_cpp::msg::dds_::MyMsg_DataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr result;
   result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * pubsub_cpp::msg::dds_::MyMsg_DataReader::_local_id = "IDL:pubsub_cpp/msg/dds_/MyMsg_DataReader:1.0";

pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr pubsub_cpp::msg::dds_::MyMsg_DataReader::_duplicate (pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean pubsub_cpp::msg::dds_::MyMsg_DataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, pubsub_cpp::msg::dds_::MyMsg_DataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr pubsub_cpp::msg::dds_::MyMsg_DataReader::_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr result = NULL;
   if (p && p->_is_a (pubsub_cpp::msg::dds_::MyMsg_DataReader::_local_id))
   {
      result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr pubsub_cpp::msg::dds_::MyMsg_DataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr result;
   result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_local_id = "IDL:pubsub_cpp/msg/dds_/MyMsg_DataReaderView:1.0";

pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_duplicate (pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr result = NULL;
   if (p && p->_is_a (pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_local_id))
   {
      result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr pubsub_cpp::msg::dds_::MyMsg_DataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr result;
   result = dynamic_cast < pubsub_cpp::msg::dds_::MyMsg_DataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



